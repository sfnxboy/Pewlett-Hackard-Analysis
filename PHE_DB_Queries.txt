--Creating tables for this Database

CREATE TABLE departments (
	dept_no VARCHAR(4) NOT NULL,
	dept_name VARCHAR(40) NOT NULL,
	PRIMARY KEY (dept_no),
	UNIQUE (dept_name)
);

CREATE TABLE employees (
	emp_no INT NOT NULL,
	birth_date DATE NOT NULL,
	last_name VARCHAR(40) NOT NULL,
	first_name VARCHAR(40) NOT NULL,
	gender VARCHAR(40) NOT NULL,
	hire_date DATE NOT NULL,
	PRIMARY KEY (emp_no)
);

CREATE TABLE dept_emp (
	emp_no INT NOT NULL,
	dept_no VARCHAR(4) NOT NULL,
	from_date DATE NOT NULL,
	to_date DATE NOT NULL,
	FOREIGN KEY (emp_no) REFERENCES employees (emp_no),
	FOREIGN KEY (dept_no) REFERENCES departments (dept_no),
	PRIMARY KEY (emp_no, dept_no)
);

CREATE TABLE salaries (
	emp_no INT NOT NULL,
	salary INT NOT NULL,
	from_date DATE NOT NULL,
	to_Date DATE NOT NULL,
	FOREIGN KEY (emp_no) REFERENCES employees (emp_no),
	PRIMARY KEY (emp_no)
);

CREATE TABLE title (
	emp_no INT NOT NULL,
	title VARCHAR NOT NULL,
	from_date DATE NOT NULL,
	to_date DATE NOT NULL,
	FOREIGN KEY (emp_no) REFERENCES employees (emp_no),
	PRIMARY KEY (emp_no, title, from_date)
);

CREATE TABLE dept_manager (
	dept_no VARCHAR(4) NOT NULL,
	emp_no INT NOT NULL,
	from_date DATE NOT NULL,
	to_date DATE NOT NULL,
	FOREIGN KEY (dept_no) REFERENCES departments (dept_no),
	FOREIGN KEY (emp_no) REFERENCES employees (emp_no),
	PRIMARY KEY (emp_no, dept_no)
);

-- Query Dates
SELECT first_name, last_name
FROM employees
WHERE birth_date BETWEEN '1952-01-01' AND '1955-12-31';

SELECT first_name, last_name
FROM employees
WHERE birth_date BETWEEN '1952-01-01' AND '1952-12-31';

SELECT first_name, last_name
FROM employees
WHERE birth_date BETWEEN '1953-01-01' AND '1953-12-31';

SELECT first_name, last_name
FROM employees
WHERE birth_date BETWEEN '1954-01-01' AND '1954-12-31';

SELECT first_name, last_name
FROM employees
WHERE birth_date BETWEEN '1955-01-01' AND '1955-12-31';

-- Requirement Eigibility
SELECT first_name, last_name
FROM employees
WHERE (birth_date BETWEEN '1952-01-01' AND '1955-12-31')
AND (hire_date BETWEEN '1985-01-01' AND '1988-12-31');

SELECT COUNT(first_name)
FROM employees
WHERE (birth_date BETWEEN '1952-01-01' AND '1955-12-31')
AND (hire_date BETWEEN '1985-01-01' AND '1988-12-31');

SELECT first_name, last_name
INTO names_of_retiries
FROM employees
WHERE (birth_date BETWEEN '1952-01-01' AND '1955-12-31')
AND (hire_date BETWEEN '1985-01-01' AND '1988-12-31');

-- Create a new table for retiring employees, but this time include the
-- employee's emp_no so that we can join this table with others.

DROP TABLE names_of_retiries;
SELECT emp_no, first_name, last_name
INTO names_of_retiries
FROM employees
WHERE (birth_date BETWEEN '1952-01-01' AND '1955-12-31')
AND (hire_date BETWEEN '1985-01-01' AND '1988-12-31');

-- Joining departments and dept_manager tables

SELECT departments.dept_name,
dept_manager.emp_no,
dept_manager.from_date,
dept_manager.to_date
FROM departments
INNER JOIN dept_manager ON departments.dept_no = dept_manager.dept_no;

-- Lets recreate the list to include a column indicating whether or not the employee
-- still works with the company.

SELECT retiring.emp_no,
retiring.first_name,
retiring.last_name,
dept_emp.to_date
FROM names_of_retiries as retiring
LEFT JOIN dept_emp ON retiring.emp_no = dept_emp.emp_no;

-- Lets perform another join between names_of_retiries and dept_emp tables
-- and ensure that the employees are still working for the company.

SELECT retiring.emp_no,
retiring.first_name,
retiring.last_name,
dept_emp.to_date
INTO current_emp
FROM names_of_retiries as retiring
LEFT JOIN dept_emp ON retiring.emp_no = dept_emp.emp_no
WHERE dept_emp.to_date = ('9999-01-01');

-- We now need to use COUNT and GROUP BY with joins to seperate the employees into their departments
-- COUNT will count the rows of a dataset
-- GROUP BY is used to seperate data by type
-- We can use the ORDER BY function to arrange the data so it presents itself in ascending/descending order

-- Employee count by department number
SELECT COUNT(ce.emp_no), de.dept_no
INTO emp_count_by_department
FROM current_emp AS ce
LEFT JOIN dept_emp AS de
on ce.emp_no = de.emp_no
GROUP BY de.dept_no
ORDER BY de.dept_no;



-- Create a table of general employee information

SELECT e.emp_no, e.first_name, e.last_name, e.gender, s.salary, de.to_date
INTO personal_emp_info
FROM employees as e
INNER JOIN salaries as s ON (s.emp_no = e.emp_no)
INNER JOIN dept_emp as de ON (de.emp_no = e.emp_no)
WHERE (birth_date BETWEEN '1952-01-01' AND '1955-12-31')
AND (hire_date BETWEEN '1985-01-01' AND '1988-12-31')
AND (de.to_date = '9999-01-01');
-- What's going on with the salaries?


-- Create a table of manager information

SELECT dm.dept_no,
d.dept_name,
dm.emp_no,
ce.last_name,
ce.first_name,
dm.from_date,
dm.to_date
INTO manager_info
FROM dept_manager AS dm
INNER JOIN departments AS d ON (dm.dept_no = d.dept_no)
INNER JOIN current_emp AS ce ON (dm.emp_no = ce.emp_no);
-- Why are there only five active managers for nine departments?


-- Create a table of department retiries (current_emp + dept_name)

SELECT d.dept_name,
ce.emp_no,
ce.first_name,
ce.last_name
INTO dept_info
FROM current_emp as ce
INNER JOIN dept_emp AS de ON (ce.emp_no = de.emp_no)
INNER JOIN departments AS d ON (de.dept_no = d.dept_no);
--Why are some employees appearing twice?


-- Create a table that will return only the information relevant to the sales team.

SELECT d.dept_name,
nor.emp_no,
nor.first_name,
nor.last_name
INTO sales_info
FROM names_of_retiries as nor
INNER JOIN dept_emp AS de ON (de.emp_no = nor.emp_no)
INNER JOIN departments as d ON (d.dept_no = de. dept_no)
AND (d.dept_name = 'Sales');


-- Create a table that will return only the information relevant to 
-- the sales team and the development team.

SELECT d.dept_name,
nor.emp_no,
nor.first_name,
nor.last_name
INTO sales_development_info
FROM names_of_retiries as nor
INNER JOIN dept_emp AS de ON (de.emp_no = nor.emp_no)
INNER JOIN departments as d ON (d.dept_no = de. dept_no)
WHERE (d.dept_name = 'Sales') OR (d.dept_name = 'Development');

#  Creating tables for PH-EmployeeDB

departments
--
dept_no varchar(4) PK
dept_name varchar(40) UNIQUE

employees
--
emp_no INT PK
birth_date DATE
last_name VARCHAR(40)
first_name VARCHAR(40)
gender VARCHAR
hire_date DATE

dept_manager
--
dept_no VARCHAR(4) PK FK >- departments.dept_no
emp_no INT PK FK >- employees.emp_no
from_date DATE
to_date DATE

dept_emp
--
emp_no INT PK FK >- employees.emp_no
dept_no VARCHAR(4) PK FK >- departments.dept_no
from_date DATE
to_date DATE

salaries
--
emp_no INT PK FK >- employees.emp_no
salary INT
from_date DATE
to_date DATE

title
--
emp_no INT PK FK >- employees.emp_no
title VARCHAR PK
from_date DATE
to_date DATE
